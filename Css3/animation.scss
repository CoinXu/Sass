
//
// @keyframes	                定义一个动画,@keyframes定义的动画名称用来被animation-name所使用。	
// animation	                复合属性。检索或设置对象所应用的动画特效。	
// animation-name	            检索或设置对象所应用的动画名称 ,必须与规则@keyframes配合使用，因为动画名称由@keyframes定义	
// animation-duration	        检索或设置对象动画的持续时间	
// animation-timing-function	检索或设置对象动画的过渡类型	
/*
	linear	                    动画从头到尾的速度是相同的。	测试
    ease	                    默认。动画以低速开始，然后加快，在结束前变慢。	测试
    ease-in	                    动画以低速开始。	测试
    ease-out	                动画以低速结束。	测试
    ease-in-out	                动画以低速开始和结束。	测试
    cubic-bezier(n,n,n,n)
*/ 

// animation-delay	            检索或设置对象动画的延迟时间	
// animation-iteration-count	检索或设置对象动画的循环次数	
// animation-direction	        检索或设置对象动画在循环中是否反向运动  normal || alternate	
// animation-play-state	        检索或设置对象动画的状态    runing || paused

$default-animation-name:                     CxAnimations           !default;
$default-animation-timing-function:          linear                 !default;
$default-animation-duration:                 2000ms                 !default;
$default-animation-delay:                    0                      !default;
$default-animation-iteration-count:          1                      !default;
$default-animation-direction:                normal                 !default;
$default-animation-play-state:               running                !default;

@import "shared.scss";


@mixin animation(
	$name:              $default-animation-name, 
	$duration:          $default-animation-duration, 
	$timing-function:   $default-timing-function, 
	$delay:             $default-animation-delay, 
	$iteration-count:   $default-animation-iteration-count, 
	$direction:         $default-animation-direction, 
	$play-state:        $default-animation-play-state
)
{
	@keyframes $name {
		@if ($duration != $default-animation-duration) or ($duration != 2s)  {
			@include prefix(animation-duration, $duration,
				-webkit, -ms, -moz, -o, official
			);	
		}
		@if $timing-function != $default-animation-timing-function {
			@include prefix(animation-timing-function, $timing-function,
				-webkit, -ms, -moz, -o, official
			);		
		}
		@if $delay != $default-animation-delay  {
			@include prefix(animation-delay, $delay,
				-webkit, -ms, -moz, -o, official
			);		
		}
		@if $iteration-count != $default-animation-iteration-count  {
			@include prefix(animation-iteration-count, $iteration-count,
				-webkit, -ms, -moz, -o, official
			);		
		}
		@if $direction != $default-animation-direction  {
			@include prefix(animation-direction, $direction,
				-webkit, -ms, -moz, -o, official
			);		
		}
		@if $play-state != $default-animation-play-state  {
			@include prefix(animation-play-state, $play-state,
				-webkit, -ms, -moz, -o, official
			);		
		}
	}
}


@mixin animation-name($name: $default-animation-name){
	@include prefix(animation-name, $name,
				-webkit, -ms, -moz, -o, official
			);	
}

@mixin animation-duration($duration: $default-animation-duration){
	@include prefix(animation-duration, $duration,
				-webkit, -ms, -moz, -o, official
			);	
}

@mixin animation-timing-function($timing-function: $default-animation-timing-function){
	@include prefix(animation-timing-function, $timing-function,
				-webkit, -ms, -moz, -o, official
			);	
}

@mixin animation-delay($delay: $default-animation-delay){
	@include prefix(animation-delay, $delay,
				-webkit, -ms, -moz, -o, official
			);	
}

@mixin animation-iteration-count($iteration-count: $default-animation-iteration-count){
	@include prefix(animation-iteration-count, $iteration-count,
				-webkit, -ms, -moz, -o, official
			);	
}

@mixin animation-direction($direction: $default-animation-direction){
	@include prefix(animation-direction, $direction,
				-webkit, -ms, -moz, -o, official
			);	
}

@mixin animation-play-state($play-state: $default-animation-play-state){
	@include prefix(animation-play-state, $play-state,
				-webkit, -ms, -moz, -o, official
			);	
}

// 
// 
// 
// $name:              $default-animation-name, 
// 	$duration:          $default-animation-duration, 
// 	$timing-function:   $default-timing-function, 
// 	$delay:             $default-animation-delay, 
// 	$iteration-count:   $default-animation-iteration-count, 
// 	$direction:         $default-animation-direction, 
// 	$play-state:        $default-animation-play-state

// .test{
// 	@include animation(CxAnimate, 2000ms, ease-in-out,0, 2, alternate, paus);
// }

//  __ 测试可用 __  Coin. May 12, 2014